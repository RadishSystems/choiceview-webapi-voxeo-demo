<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ccxml PUBLIC "-//W3C//DTD CCXML 1.0//EN" "http://www.w3.org/TR/ccxml/ccxml.dtd">
<ccxml version="1.0" xmlns="http://www.w3.org/2002/09/ccxml">
<meta http-equiv="Pragma" content="no-cache"/>
<meta http-equiv="Expires" content="-1"/>

<!-- This is the main ccxml file for interacting with Radish Systems Choiceview -->
<!-- This script is for debugging purposes -->
	   <script>
	   function objectToString(  obj ) { 
		   var result = " [\n"; 
		   result += extractprops( "", obj); 
		   result += " ]";
		   return result; 
	   } 

	   function extractprops ( parent, obj ) { 
		   var prop, name, result = ""; 
		   var count = 1; 
		   if ( typeof ( obj ) == "object" ) { 
			   for ( prop in obj ) { 
				   name = parent + prop; 
				   if ( typeof ( obj [ prop ] ) == "object" ) { 
					   result += extractprops( name+".", obj [ prop ] );
				   } else { 
					   result +=   " " + name + ":" + obj [ prop ] + "\n"; 
				   } 
				   count = count + 1; 
			   } 
		   } else { 
			   if (obj == undefined ) { 
				   result +=  "___undefined"; 
			   } else { 
				   result +=  obj; 
			   } 
		   } 
		   return result; 
	   } 
   </script>
<var name="in_connectionid"/> 	<!-- The connectionid of the incoming call. -->
<var name="dialogid"/>        	<!-- The id of the dialog we will run. -->
<var name="callID"/>		  	<!-- The caller's ANI -->
<var name="sessionID"/>			<!--  The CCXML sessionID -->
<var name="myURL"/>				<!--  This is the URL that is passed into the ChoiceViewSession object. It specifies where to send control messages back to -->
<var name="menuName"/>
<var name="buttonName"/>

<!-- Initialize the state for this page -->
<var name="state" expr="'init'"/>

<!-- Possible states:
	init 	- The initialized state, accept the call.  Since this is the only state
	          you could not use state at all.
	CV		- in a ChoiceView app
	IVR		- running your app
	CVInit 	- In this state, we are setting up the Choice View Session
	CVMain  - The Main Menu Dialog
	LoadHTML
	CVTransfer
	CVRemoteDisconnect
-->

<!-- Event processor -->
  <eventprocessor statevariable="state">
  
  	<!-- STATE: init -->
  
  	<transition event="ccxml.loaded" >
  		<assign name="sessionID" expr="session.id"/>
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
        <log expr="'   RadishDemo start.ccxml ccxml.loaded event'"/>
        <log expr="'   RadishDemo sessionID: ' + sessionID + '###'"/>
        <log expr="'   ###session.ioprocessors: ' + session.ioprocessors['basichttp'] + '###'"/>
        <assign name="myURL" expr="session.ioprocessors['basichttp']"/>
        <assign name="sessionID" expr="session.id"/>
		
		<!--  this is for testing!!!! -->
		
        <!-- <script> myURL = myURL.replace("192.168.0.3", "97.122.183.108");</script> -->
        
        <script> myURL = myURL.replace("192.168.0.214", "208.75.44.141");</script>
        
	</transition>
	
  
	<!-- Prepare a dialog to load the initial prompt for ChoiceView or not -->
    <transition event="connection.alerting"  state="init">
    	<log expr="'RadishDemo starting'"/>
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
        <assign name="in_connectionid" expr="event$.connectionid"/>
        <assign name="callID" expr="session.connections[event$.connectionid].remote"/>
        
        <script> 
          	callID = callID.replace("tel:+1", "");
          	callID = callID.replace("+", "");
          	
          	if(callID.length > 10){
          		callID = callID.substr(1,10);
          	}
        </script>
        
        <dialogprepare 
   			type="'application/voicexml+xml'" 
        	connectionid = "in_connectionid"
        	parameters="callID in_connectionid"
			src="'http://appserver:8080/RadishDemo/vxml/Choice.vxml'" />		
    </transition>
		
    <!-- Dialog is prepared, accept the call-->			
    <transition event="dialog.prepared"  state="init">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
	    <assign name="dialogid" expr="event$.dialogid"/>
		<accept connectionid="in_connectionid"/>
    </transition>

	<!-- Call is now connected, Start the dialog -->
    <transition event="connection.connected"  state="init">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
        <dialogstart prepareddialogid="dialogid" connectionid="in_connectionid"/>
     </transition>
 
    <transition event="dialog.started"  state="init">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
        
        <!-- 
        Start the CV Session while the prompt is playing.
        The startSession call will block until the caller presses start on their
        mobile device. When they press start, the fetch.done event is thrown for the init state.
        At this point, we need to launch the MainMenu dialog and html page. 
        -->
        <fetch next="'http://appserver:8080/RadishDemo/jsp/establishCV.jsp'" type="'text/ecmascript'" namelist="callID in_connectionid myURL sessionID"/>
    </transition>

	<!-- Finished playing the Main Menu dialog, now wait for ChoiceView events or start your non ChoiceView app   -->
    <transition event="dialog.exit"  state="init">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
        <var name="outResult" expr = "event$.values.result"/>
        <log expr="'result is ' + outResult"/>
        
        <!-- 
        If we get here, then the caller has not pressed start on their mobile device
        and the startSession has timed out.
        Play the normal IVR menus
        -->        
        <if cond="outResult == 'IVR'" >
        
        	<!--  Launch the Avaya OD application with no Choice View Support -->	  
        	<log expr="'Choice View Menu timed out or 1 was pressed. Will start IVR application.'"/>
        	
        	<log expr="'got standard - want to execute OD App here'"/>
        	<assign name="in_connectionid" expr="event$.connectionid"/>
        	
        	<dialogprepare
        	    connectionid = "in_connectionid"        	
   				type="'application/voicexml+xml'" 
				src="'http://appserver:8080/RadishTest/Start'" />
        <!--  
        	<assign name="state" expr="'cancelStartSession'"/>
        	<fetch next="'http://appserver:8080/RadishDemo/jsp/endCV.jsp'" type="'text/ecmascript'"  
            	namelist="callID in_connectionid"/>	   	
        -->	
        </if>
    </transition>
      
	<!--  
	Right now this isn't being used. We need a way to cancel the startSesion
	Currently, it just times out.
	 --> 
   	<transition event="fetch.done"  state="cancelStartSession">
    	<log expr="'-- ' + event$.name"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
        
        <!-- Define our return variables -->
        <var name="result" expr="'OKAY'"/>
      
        <!-- execute the returned ECMAScript -->
        <script fetchid="event$.fetchid"/>
        
        <!-- Log the results -->
    	<log expr="'endCV.jsp result:' + result"/>
    	
    	<assign name="state" expr="'IVR'"/>
    	
    	<dialogprepare
        	    connectionid = "in_connectionid"        	
   				type="'application/voicexml+xml'" 
				src="'http://appserver:8080/RadishTest/Start'" />
	
    </transition>

    <!--  handle any hangups in the [init] state -->
    <transition event="connection.disconnected"  state="init">
     	<log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
      	<exit/>      
    </transition>

	<!--  Choice View Initialization State  -->
  	<transition event="fetch.done"  state="init">
    	<log expr="'-- ' + event$.name"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
        
        <!-- Define our return variables -->
        <var name="result" expr="'OKAY'"/>
        <var name="dialogname" expr="''"/>
        
        <!-- execute the returned ECMAScript -->
        <script fetchid="event$.fetchid"/>
        
        <!-- Log the results -->
    	<log expr="'establishCV.jsp result:' + result"/>
    	<log expr="'establishCV.jsp dialogname :' + dialogname"/>
    	
    	<!-- 
    	This gets executed if we couldn't start the CV session for whatever reason
    	we need to terminate the Choice.vxml dialog and just go to the IVR code 
    	-->
    	<if cond="result=='DISCONNECTED'">
    	<!--  
    		<dialogterminate dialogid="dialogid" immediate="true"/>
    	-->	
    		<!-- <assign name="state" expr="'nocvsession'"/>-->        
        	<log expr="'Cant start CV session. Will go to IVR app instead.'"/>
        	<assign name="state" expr="'IVR'"/>    
    	<dialogprepare
        	    connectionid = "in_connectionid"        	
   				type="'application/voicexml+xml'" 
				src="'http://appserver:8080/RadishTest/Start'" />
        	
		<else/>
			<!--  the caller pressed 'start' so load the MainMenu -->
			<dialogterminate dialogid="dialogid" immediate="true"/>
			
			<!-- prepare the dialog. This should be the MainMenu-->
    		<assign name="state" expr="'StartCVMain'"/>
        	
    	</if>
    	
    </transition>
    
    <!--  Prepare the MainMenu dialog -->
    <transition event="dialog.exit"  state="StartCVMain">
    	<assign name="state" expr="'CVMain'"/>    
    	<dialogprepare connectionid = "in_connectionid"
				type="'application/voicexml+xml'" 
				src="'http://appserver:8080/RadishDemo/vxml/MainMenu.vxml'" />	
    </transition>
    
    <!--  Prepare the IVR dialog -->
    <transition event="dialog.exit"  state="nocvsession">
    	<assign name="state" expr="'IVR'"/>    
    	<dialogprepare
        	    connectionid = "in_connectionid"        	
   				type="'application/voicexml+xml'" 
				src="'http://appserver:8080/RadishTest/Start'" />
    </transition>
    
    <!--  Main Menu Dialog Prepared -->
	<transition event="dialog.prepared"  state="CVMain">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
	    <assign name="dialogid" expr="event$.dialogid"/>
        <dialogstart prepareddialogid="dialogid" connectionid="in_connectionid"/>
     </transition>    

	<!--  Main Menu Dialog Started -->
   	<transition event="dialog.started"  state="CVMain">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
    </transition>

	<!--  Main Menu Dialog completed normally -->
    <transition event="dialog.exit"  state="CVMain">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>   
        
        <!-- 
		The Order Status state loops back to the Main menu after a 10 second delay
		The other states have specific handling for Transfer and Disconnect
        -->
        <assign name="state" expr="'LoadHTML'"/> 
        <assign name="menuName" expr="'Main_Menu'"/> 
        <assign name="buttonName" expr="''"/>  
	  <fetch next="'http://appserver:8080/RadishDemo/jsp/loadHTML.jsp'" type="'text/ecmascript'" namelist="callID in_connectionid myURL sessionID menuName buttonName "/>
           
    </transition>
    
    <!-- 
    When the VXML code initiates a transfer, then this event is thrown.
    We must initiate the transfer here when we catch this event
    -->
    <transition event="dialog.transfer"  state="CVMain">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>

 		 <assign name="state" expr="'CVTransfer'"/> 
 		 <createcall dest="event$.uri" connectionid="event$.connectionid"/>
 
    </transition>
    
    <!--  
    Handle a disconnect in the [CVMain] state.
    This is thrown when the caller hangs up from the mobile device
     -->
    <transition event="connection.disconnected"  state="CVMain">
    
     	<log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
        
        <!--  
        We need to end the ChoiceViewSession, so change the state to [CVCleanup] and transition
        to the cleanup handling 
        -->
        <assign name="state" expr="'CVCleanup'"/> 
        <fetch next="'http://appserver:8080/RadishDemo/jsp/endCV.jsp'" type="'text/ecmascript'"  
            	namelist="callID in_connectionid"/>        
    </transition>
    

	<!--  Prepare the [IVR] dialog  -->
	<transition event="dialog.prepared"  state="IVR">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
	    <assign name="dialogid" expr="event$.dialogid"/>
        <dialogstart prepareddialogid="dialogid" 
			connectionid="in_connectionid"/>
     </transition>    

	<!--  Start the [IVR] dialog  -->
   	<transition event="dialog.started"  state="IVR">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
    </transition>

	<!--  The [IVR] dialog  exited normally-->
    <transition event="dialog.exit"  state="IVR">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
        <exit/>        
    </transition>
    
    <!--  The [IVR] dialog  exited normally-->
    <transition event="connection.disconnected"  state="IVR">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
        <exit/>        
    </transition>


    <!--  
    Handle ControlMessages From Choice View Here 
    These messages are send whenever there is any user input from the mobile device
    -->
	<transition event="controlmessage" >
	
	  <log expr="'#####Received Control Message Event#####'" />
	  <log expr="'   eventdata... \n' + objectToString(event$)"/>
	  <log expr="'name=' + event$.name" />
	  <log expr="'sourcetype=' + event$.eventsourcetype" />
	  <log expr="'eventsource=' + event$.eventsource" />
	  <log expr="'ButtonNumber=' + event$.ButtonNumber" />
	  <log expr="'MenuNumber=' + event$.MenuNumber" />
	  
	  <assign name="menuName" expr="event$.MenuName"/>
	  <assign name="buttonName" expr="event$.ButtonName"/>
	  
	  <log expr="'MenuName=' + menuName" />
	  <log expr="'ButtonName=' + buttonName" />
	  
	  <!--  Immediately terminate the current dialog when a button is tapped on the mobile device -->
	  <dialogterminate dialogid="dialogid" immediate="true"/>
	  
	  <!-- 
	  Pass the button/menu info to the jsp. It will determine the right dialog 
	  to play next and load the next html page to the mobile device based on the controlmessage info 
	  -->
	  <assign name="state" expr="'LoadHTML'"/>  
	  <fetch next="'http://appserver:8080/RadishDemo/jsp/loadHTML.jsp'" type="'text/ecmascript'" namelist="callID in_connectionid menuName buttonName "/>
	  
	</transition>
	
	<!-- 
	This message is send when the user ends the session on the mobile device.
	We need to terminate the current dialog and then clean up the session.
	 -->
	<transition event="statechange">
		<log expr="'#####Received State Change Event#####'" />
	  	<log expr="'   eventdata... \n' + objectToString(event$)"/>
		<log expr="'name=' + event$.name" />
		<log expr="'newstate=' + event$.newstate" />
		
		<!-- 
		Handle the disconnect. Terminate the voice dialog and then transition 
		to a state where we play the caller a goodbye message 
		-->
		<if cond="'disconnected' == event$.newstate">
			<dialogterminate dialogid="dialogid" immediate="true"/>
			<assign name="state" expr="'CVRemoteDisconnect'"/> 
		</if>
		
		<!--  The caller pressed start, so now we need to load the main menu -->
		<if cond="'connected' == event$.newstate">
			<dialogterminate dialogid="dialogid" immediate="true"/>
    		  
    		<!-- prepare the dialog. This should be the MainMenu-->
    		<assign name="state" expr="'CVMain'"/>
        	<dialogprepare connectionid = "in_connectionid"
				type="'application/voicexml+xml'" 
				src="'http://appserver:8080/RadishDemo/vxml/MainMenu.vxml'" />	
		</if>
	</transition>
	
	<!-- 
	When we terminate the dialog, it is going to throw a dialog.exit.
	We catch it here and then transition to the Goodbye state 
	-->
	<transition event="dialog.exit"  state="CVRemoteDisconnect">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>  
        <assign name="state" expr="'CVGoodbye'"/> 
        
        <!--  Prepare the Goodbye dialog -->
         <dialogprepare 
	   			type="'application/voicexml+xml'" 
	        	connectionid = "in_connectionid"
	        	parameters="callID in_connectionid"
				src="'http://appserver:8080/RadishDemo/vxml/Goodbye.vxml'" />    
    </transition>
    
    
    <!-- 
    We would have transitioned to the [Cleanup] state somewhere above if 
    we trapped a hangup or disconnect. Of we are done cleanup up, then we just exit. 
    -->
	<transition event="fetch.done"  state="CVCleanup">
    	<log expr="'-- ' + event$.name"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
        
        <!-- Define our return variables -->
        <var name="result" expr="'OKAY'"/>
      
        <!-- execute the returned ECMAScript -->
        <script fetchid="event$.fetchid"/>
        
        <!-- Log the results -->
    	<log expr="'endCV.jsp result:' + result"/>
    	<exit/>
	
    </transition>
    
    <!--  The [CVCleanup] State exited normally -->
    <transition event="dialog.exit"  state="CVCleanup">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>       
    </transition>
	
	<!--  
	This is a generic handler for the [LoadHTML] state. 
	This state is used for all of the different menu options.
	We either loop back to the main menu or we go to the goodbye state.  
	-->
  	<transition event="fetch.done"  state="LoadHTML">
    	<log expr="'-- ' + event$.name"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
       
        
        <!-- Define our return variables -->
        <var name="result" expr="'OKAY'"/>
        <var name="dialogname" expr="''"/>
        
        <!-- execute the returned ECMAScript -->
        <script fetchid="event$.fetchid"/>
        
        <!-- Log the results -->
    	<log expr="'loadHTML.jsp result:' + result"/>
    	<log expr="'loadHTML.jsp dialogname :' + dialogname"/>
    	
    	<!--  if this is the radish website page, we want to disconnect -->
    	<if cond="'DISCONNECT' == result">
    		<assign name="state" expr="'CVGoodbye'"/> 
    	<else/>
    		<assign name="state" expr="'CVMain'"/> 
    	</if>
    	 
    	<!-- prepare the dialog -->
        <dialogprepare connectionid = "in_connectionid"
			type="'application/voicexml+xml'" 
			src="'http://appserver:8080/RadishDemo/vxml/' + dialogname" />		
    </transition>
    
    <!--  The [LoadHTML] state exited normally -->
     <transition event="dialog.exit"  state="LoadHTML">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>      
    </transition>
    
    
    <!--  GOODBYE DIALOG -->
    
    <!-- The [CVGoodbye] state was prepared -->
    <transition event="dialog.prepared"  state="CVGoodbye">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
	    <assign name="dialogid" expr="event$.dialogid"/>
        <dialogstart prepareddialogid="dialogid" connectionid="in_connectionid"/>
     </transition>    


	<!-- The [CVGoodbye] state was started -->
   	<transition event="dialog.started"  state="CVGoodbye">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
    </transition>
    
    <!-- The [CVGoodbye] state exited normally -->
     <transition event="dialog.exit"  state="CVGoodbye">
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>  
        
        <!--  Now transition to [Cleanup] to end the CV Session -->
		<assign name="state" expr="'CVCleanup'"/> 
		<fetch next="'http://appserver:8080/RadishDemo/jsp/endCV.jsp'" type="'text/ecmascript'"  namelist="callID in_connectionid"/>  	
       
    </transition>
    
    <!-- If the caller Hangs up in the Goodbye dialog, handle it here -->
    <transition event="connection.disconnected"  state="CVGoobye">
    
     	<log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
        <assign name="state" expr="'CVCleanup'"/> 
        <fetch next="'http://appserver:8080/RadishDemo/jsp/endCV.jsp'" type="'text/ecmascript'"  
            	namelist="callID in_connectionid"/>        
    </transition>
    
    
    <!--  TRANSFER  -->
    
    <!-- When we call <createcall> in the [CVMain] state, this event is thrown, so handle it here-->
    <transition event="connection.progressing"  state="CVTransfer">
    
     	<log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
                
	</transition>
    
    <!-- This is thrown when the Transfer is connected -->
  	<transition event="connection.connected"  state="CVTransfer">
    
     	<log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
               
        <!--  Don't forget to cleanup --> 
        <assign name="state" expr="'CVCleanup'"/> 
        <fetch next="'http://appserver:8080/RadishDemo/jsp/endCV.jsp'" type="'text/ecmascript'"  
            	namelist="callID in_connectionid"/>
    </transition>

	<!-- STATE: ANYSTATE. Catch all, aids in debugging and to see the missed events -->
	
	<transition event="error.dialog.notprepared" >
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
		<reject connectionid="in_connectionid"/>
    </transition>

    <transition event="error.dialog.notstarted" >
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
		<disconnect connectionid="in_connectionid" reason="event$.reason" />
    </transition>
    
    
	<transition event="ccxml.exit" >
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
	</transition>

	<transition event="ccxml.kill" >
        <log expr="'-- ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
	</transition>

    <transition event="" >
        <log expr="'-- missed ' + event$.name +' -- [' + state +']'"/>
        <log expr="'   eventdata... \n' + objectToString(event$)"/>
    </transition>

  </eventprocessor>
</ccxml>